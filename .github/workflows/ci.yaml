name: .NET build, test and release

permissions: write-all

on:
  push:
    branches:
      - '*'
    tags:
      - v*
  pull_request:
    branches:
      - '*'

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet: ['8.0']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            ${{ matrix.dotnet }}.x
            8.0.x

      - name: .NET info
        run: |
          dotnet --info
          dotnet --list-sdks
          dotnet --list-runtimes

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore --property TargetFramework=net${{ matrix.dotnet }}

      - name: Test .NET ${{ matrix.dotnet }}
        run: dotnet test --no-restore --configuration Release --framework net${{ matrix.dotnet }} --logger "trx;LogFileName=test-results.trx"

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test (${{ matrix.os }}, net${{ matrix.dotnet }})
          path: test/TestResults/test-results.trx
          reporter: dotnet-trx
          fail-on-error: true

  Release:
    needs: Build
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build
        run: ci/make-nuget-package.sh ${{ github.ref_name }}

      - name: Push
        run: ci/push-package-to-nuget.sh
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.workspace }}/**/*.nupkg
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
